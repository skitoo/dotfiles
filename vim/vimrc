" Vim configuration
" Author : Alexis Couronne - https://www.skitoo.net

"-------------------------------------------------------------------------------
call plug#begin('~/.vim/plugged')

" Indispensables plugins
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
Plug 'scrooloose/nerdcommenter'
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'
Plug 'tpope/vim-surround'
Plug 'majutsushi/tagbar'
Plug 'mattn/emmet-vim'
Plug 'Raimondi/delimitMate'
Plug 'Valloric/YouCompleteMe', { 'do': './install.sh' }
Plug 'tpope/vim-dispatch'
Plug 'ryanoasis/vim-devicons' " Need https://github.com/ryanoasis/nerd-fonts
Plug 'w0rp/ale'
Plug 'mileszs/ack.vim'

" Themes
Plug 'flazz/vim-colorschemes'

" Languages
Plug 'python-mode/python-mode'
Plug 'sirtaj/vim-openscad'
Plug 'ElmCast/elm-vim'
Plug 'posva/vim-vue'
Plug 'plasticboy/vim-markdown'
Plug 'pangloss/vim-javascript'
Plug 'mxw/vim-jsx'
Plug 'fatih/vim-go'
Plug 'rust-lang/rust.vim'
Plug 'leafgarland/typescript-vim'
Plug 'ternjs/tern_for_vim', { 'do': 'npm install'}
Plug 'elixir-editors/vim-elixir'
Plug 'slashmili/alchemist.vim'
Plug 'vim-ruby/vim-ruby'
Plug 'rodjek/vim-puppet'

call plug#end()

"-------------------------------------------------------------------------------
" General config
"

" Show the filename in the window titlebar
set title

" Enable line numbers
set number

" Show the cursor position
set ruler

" Do not wrap long lines
set nowrap

" Highlight current line
set cursorline

" Make tabs as wide as four spaces
set tabstop=2

" Autoindent to four spaces
set shiftwidth=2

" A soft-tab of four spaces
set softtabstop=2

" Hitting Tab in insert mode will produce the appropriate number of spaces
set expandtab

" Allow autoindent
set autoindent

" Allow smartindent
set smartindent

" Allow cindent
set cindent

" Disable swap files
set noswapfile

" Disable backup files
set nobackup

" The current buffer can be put to the background without writing to disk
set hidden

" Show invisible characters
set lcs=tab:▸\ ,trail:·,nbsp:_
set list

" Enable yank/cut/paste from clipboard
set clipboard+=unnamedplus

" Disable folding
set nofoldenable

" Set colorscheme
colorscheme Monokai

" Set guifont
set guifont=DroidSansMonoForPowerline\ Nerd\ Font\ Regular\ 11

" Allow transparency
highlight Normal guibg=none ctermbg=none
highlight NonText guibg=none ctermbg=none
highlight SpecialKey guibg=none ctermbg=none

" Turn on file type detection
filetype plugin indent on

" Check external changes
au FocusGained,BufEnter * :silent! checktime

" Disable arrow keys
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
inoremap <up> <nop>
inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop>


" ------------------------------------------------------------------------------
" Specific language configs
"

" Javascript
autocmd FileType javascript set colorcolumn=101
autocmd FileType vue set colorcolumn=101
autocmd FileType javascript.jsx setlocal sts=2 sw=2 ts=2

" Python
autocmd FileType python set colorcolumn=81
autocmd FileType python setlocal sts=4 sw=4 ts=4

" Elm
autocmd FileType elm set colorcolumn=81
autocmd FileType elm setlocal sts=4 sw=4 ts=4


" ------------------------------------------------------------------------------
" Trailing whitespaces
"

" Highlight trailing whitespaces
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/
autocmd BufWinLeave * call clearmatches()

" Automatically remove trailing whitespace before write
function! StripTrailingWhitespace()
    normal mZ
    %s/\s\+$//e
    if line("'Z") != line(".")
        echo "Stripped whitespace\n"
    endif
    normal `Z
endfunction

" Apply based on filetype
autocmd BufWritePre *.css,*.scss,*.sass,*.less :call StripTrailingWhitespace()
autocmd BufWritePre *.js,*.jsx,*.js6,*.es6,*.ts,*.vue :call StripTrailingWhitespace()
autocmd BufWritePre *.html,*.xhtml :call StripTrailingWhitespace()
autocmd BufWritePre *.yml,*.yaml :call StripTrailingWhitespace()
autocmd BufWritePre *.py :call StripTrailingWhitespace()
autocmd BufWritePre *.pp :call StripTrailingWhitespace()
autocmd BufWritePre *.md,*.markdown,*.mkd :call StripTrailingWhitespace()
autocmd BufWritePre *.rst :call StripTrailingWhitespace()
autocmd BufWritePre *.c,*.cpp,*.java,*.rb,*.go :call StripTrailingWhitespace()
autocmd BufWritePre *.exs,*.ex,*.eex :call StripTrailingWhitespace()


"-------------------------------------------------------------------------------
" Pluggins config
"

" Vim-airline config
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1
let g:airline_theme = 'badwolf'

" Nerdcommenter config
let g:NERDSpaceDelims = 1
let g:NERDCompactSexyComs = 1
let g:NERDDefaultAlign = 'left'
let g:NERDCommentEmptyLines = 1
let g:NERDTrimTrailingWhitespace = 1

" Vim-jsx config
let g:jsx_ext_required = 0  " enable jsx in .js files

" ALE config
let g:ale_echo_msg_error_str = 'E'
let g:ale_echo_msg_warning_str = 'W'
let g:ale_echo_msg_format = '[%linter%] [%severity%] %s'
let g:airline#extensions#ale#enabled = 1
let g:ale_open_list = 1
let g:ale_linters = {
\   'javascript': ['eslint'],
\}

" Ctrlp config
set wildignore+=*/tmp/*,*/node_modules/*,*/dist/*,*/elm-stuff/*,*.so,*.swp,*.zip,*.pyc,*.pyo

" Vim-fugitive config
set statusline+=%{fugitive#statusline()}

" Vim-devicons
let g:WebDevIconsUnicodeDecorateFolderNodes = 1
let g:DevIconsEnableFoldersOpenClose = 1

" YouCompleteMe
let g:ycm_semantic_triggers = {
  \ 'elm' : ['.'],
  \}

" Elm-vim
let g:elm_format_autosave = 1

" vim-go
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_fields = 1
let g:go_highlight_types = 0
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1

"-------------------------------------------------------------------------------
" Mapping
"

let mapleader = ","

" Save current file
nmap <C-s> :write<CR>

" Close VIM
nmap <leader>q :quit<CR>

" Close current buffer
nmap <C-q> :bd<CR>

" Toggle Tagbar
map <F2> :TagbarToggle<CR>

" Sort selected lines
vmap <leader><F5> :sort<CR>

" Reload vim config file and refresh Airline
nmap <leader><F9> :so $MYVIMRC<CR>:AirlineRefresh<CR>

" Update all plugins
nmap <leader><F10> :PlugUpdate<CR>

"" Go to right buffers
nmap <leader>n  :bn<CR>

"" Go to left buffers
nmap <leader>b :bp<CR>

"" Go to the top window
nmap <leader>k :wincmd k<CR>

"" Go to the bottom window
nmap <leader>j :wincmd j<CR>

"" Go to the left window
nmap <leader>h :wincmd h<CR>

"" Go to the right window
nmap <leader>l :wincmd l<CR>

"" FZF shortcuts
nmap <C-p> :Files<CR>
nmap <C-o> :Buffers<CR>
nmap <C-c> :Commits<CR>

"" Refactoring mustache JS
"" Change {a word} to { a word }
nmap <leader><F8> :%s/{\(\S\(.*\)\S\)}/{ \1 }/gc<CR>
